Service Accounts in Kubernetes allow you to authenticate and authorize applications and services running within a cluster. They provide a way to grant specific permissions and access control to pods and containers.
In this practical, we will cover the following steps:

  1.Creating a Service Account
  2.Creating a token for the Service Account
  3.Creating a Role to define permissions
  4.Creating a RoleBinding to associate the Role with the Service Account
  5.Using the Service Account in a Pod
  6.Verifying access permissions

kubectl create sa mysa
serviceaccount/mysa created

kubectl create token mysa
eyJhbGciOiJSUzI1NiIsImtpZCI6Ii0yV1Z3YTZjZTNfV0pBMXJEeGI3SktIZUxPS2cxQWwxa25YQzBtcms2Mk0ifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNzM1NTA0NDg3LCJpYXQiOjE3MzU1MDA4ODcsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwianRpIjoiMzVjNGYzZWItN2JmNi00ZGMzLTkyNmYtM2UwN2I4YjM1ZTI4Iiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJteS1maXJzdC1ucyIsInNlcnZpY2VhY2NvdW50Ijp7Im5hbWUiOiJteXNhIiwidWlkIjoiZWQxMmE2ZGUtNWU4ZS00YTk4LTk1NTQtNzUwZDhiOWRmMDlmIn19LCJuYmYiOjE3MzU1MDA4ODcsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpteS1maXJzdC1uczpteXNhIn0.UMPm2yRMxS9WDzP8uNhHrpIG1HJufJYh8ebN4nhJlOIRHkFDY0FV0wyrXXjCpQzMcBy8fhfl8L0TUxnH6eJHKfEN7-C1NK67e-J4eE4BCVaHQ735c90AHfnovJ8VzwRNprurXx00fGfdENS9hPIn3vb9Y5ls6WMV0qbuzOn4Nwc77X0F4xAQPA_wlRWnYBazja18-hX7-HoOQlPwgmYe4rEuiKS19Nc4B7Hu0s8TdpabDzqBYjGvwvnMpytBJUfHtw0WhXbsFDJKLYwRTDUw3_VTdgNC5ZgI21V9bIO-eY8DR8hhlMjLJEA4gpWHtySJhL0mg-11Hp4O_-arjRRuWw

vi Pod.yaml
          apiVersion: rbac.authorization.k8s.io/v1
          kind: Role
          metadata:
            namespace: default
            name: pod-reader
          rules:
          - apiGroups:
            - ''
            resources:
            - pods
            verbs:
            - get
            - watch
            - list

vi Role.yaml
          apiVersion: rbac.authorization.k8s.io/v1
          kind: RoleBinding
          metadata:
            name: read-pods
            namespace: default
          subjects:
          - kind: ServiceAccount
            name: mysa
            namespace: default
          roleRef:
            kind: Role
            name: pod-reader
            apiGroup: rbac.authorization.k8s.io

vi service_account.yaml
          apiVersion: v1
          kind: Pod
          metadata:
            name: nginx
          spec:
            serviceAccountName: mysa
            containers:
            - name: nginx
              image: nginx:1.14.2
              ports:
              - containerPort: 80
